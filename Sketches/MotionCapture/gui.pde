/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void sldr_fpsChanged(GSlider source, GEvent event) { //_CODE_:sldr_fpsControl:663526:
    //println("sldr_fpsControl - GSlider >> GEvent." + event + " @ " + millis());
    
    camera.setActive(false);
    
    frameRate(fRate * (sldr_fpsControl.getValueF()));
    
} //_CODE_:sldr_fpsControl:663526:

public void btn_onPauseClick(GButton source, GEvent event) { //_CODE_:btn_pause:392439:
    //println("btn_pause - GButton >> GEvent." + event + " @ " + millis());
    if(millis() > 5000) {  
        if(looping) { // If TRUE set to FALSE
            looping = !looping;
            btn_pause.setIcon("media-playback-pause-symbolic.symbolic.png", 1, GAlign.NORTH, GAlign.CENTER, GAlign.MIDDLE);
            btn_pause.setLocalColorScheme(GCScheme.RED_SCHEME);
        } else { // If FALSE set to TRUE
            looping = !looping; // True
            btn_pause.setIcon("media-playback-start-symbolic.symbolic.png", 1, GAlign.NORTH, GAlign.CENTER, GAlign.MIDDLE);
            btn_pause.setLocalColorScheme(GCScheme.GREEN_SCHEME);
        }
    }
    else {
        // Allpw the program to generate sufficient data before playing with it.
        println("WARNING: Please wait until 5 seconds have elapsed before attempting to pause.");    
    }
    
} //_CODE_:btn_pause:392439:

public void btn_onChangeDirClick(GButton source, GEvent event) { //_CODE_:btn_changeDir:762411:
    //println("btn_changeDir - GButton >> GEvent." + event + " @ " + millis());
  
    if(millis() > 5000) {
        if(forwards) {
            forwards = !forwards; // False
            btn_changeDir.setIcon("media-seek-forward-symbolic-rtl.symbolic.png", 1, GAlign.NORTH, GAlign.CENTER, GAlign.MIDDLE);
        } else {
            forwards = !forwards; // True
            btn_changeDir.setIcon("media-seek-forward-symbolic.symbolic.png", 1, GAlign.NORTH, GAlign.CENTER, GAlign.MIDDLE);
        }
    }
    else {
        println("WARNING: Please wait until 5 seconds have elapsed before attempting to rewind.");    
    }
} //_CODE_:btn_changeDir:762411:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.GREEN_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  sldr_fpsControl = new GSlider(this, 210, 60, 300, 40, 8.0);
  sldr_fpsControl.setShowValue(true);
  sldr_fpsControl.setShowLimits(true);
  sldr_fpsControl.setLimits(1.0, 0.0, 1.0);
  sldr_fpsControl.setNbrTicks(15);
  sldr_fpsControl.setStickToTicks(true);
  sldr_fpsControl.setShowTicks(true);
  sldr_fpsControl.setNumberFormat(G4P.DECIMAL, 1);
  sldr_fpsControl.setOpaque(false);
  sldr_fpsControl.addEventHandler(this, "sldr_fpsChanged");
  btn_pause = new GButton(this, 280, 10, 60, 42);
  btn_pause.setIcon("media-playback-start-symbolic.symbolic.png", 1, GAlign.SOUTH, GAlign.CENTER, GAlign.MIDDLE);
  btn_pause.addEventHandler(this, "btn_onPauseClick");
  btn_changeDir = new GButton(this, 380, 16, 60, 32);
  btn_changeDir.setIcon("media-seek-forward-symbolic.symbolic.png", 1, GAlign.SOUTH, GAlign.CENTER, GAlign.MIDDLE);
  btn_changeDir.addEventHandler(this, "btn_onChangeDirClick");
}

// Variable declarations 
// autogenerated do not edit
GSlider sldr_fpsControl; 
GButton btn_pause; 
GButton btn_changeDir; 
